package com.arquitecturas.sysacad.ui;

import java.text.SimpleDateFormat;
import java.util.ArrayList;
import java.util.Date;
import java.util.Locale;

import org.json.JSONArray;
import org.json.JSONObject;

import android.content.Context;
import android.content.SharedPreferences;
import android.os.Bundle;
import android.support.v4.app.NavUtils;
import android.support.v7.app.ActionBarActivity;
import android.util.Log;
import android.view.Menu;
import android.view.MenuItem;
import android.widget.ArrayAdapter;
import android.widget.ListView;

import com.arquitecturas.sysacad.R;
import com.arquitecturas.sysacad.logic.Notificacion;
import com.arquitecturas.sysacad.twitter.GetBearerTokenAsyncTask;
import com.arquitecturas.sysacad.twitter.GetFeedAsyncTask;


public class Notificaciones extends ActionBarActivity {

	private String[] hashtagsABuscar = { "" };
	private final String USUARIO = "SysacadPrueba";
	private ListView listViewResultados;
	private ArrayList<Notificacion> notificacionesOk = null;
	private ArrayList<String> notificacionesOkString = null;
	private String jsonResultado = null;
	private String mAccessToken;
	
	//------------------------------ON CREATE---------------------------------
	@Override
	protected void onCreate(Bundle savedInstanceState) {
		super.onCreate(savedInstanceState);
		setContentView(R.layout.activity_notificaciones);
		getSupportActionBar().setDisplayHomeAsUpEnabled(true);
		
		listViewResultados = (ListView) findViewById(R.id.lista_notificaciones);
		
		SharedPreferences sharedpreferences = getSharedPreferences("Hashtags", Context.MODE_PRIVATE); 
		String hashtagGuardados = sharedpreferences.getString("hashtagABuscar", "");
		hashtagsABuscar = hashtagGuardados.split(",");

		new GetBearerTokenAsyncTask() {

			@Override
			protected void onPostExecute(String jsonText) {
				super.onPostExecute(jsonText);

				try {

					JSONObject root = new JSONObject(jsonText);
					mAccessToken = (String) root.getString("access_token");

					BuscarTwitter();

				} catch (Exception e) {
					Log.e("GetBearerTokenTask", "Error:" + e.getMessage());
				}
			}

		}.execute();
	}
	
	//------------------------------------METODOS---------------------------------------

	public void BuscarTwitter() {
		
		//URls de ejemplo para busqueda por hashtags o por usuarios, respectuvamente:
		//https://api.twitter.com/1.1/search/tweets.json?q=%23MiSerieFAvorita&result_type=recent&count=2
		//https://api.twitter.com/1.1/statuses/user_timeline.json?screen_name=twitterapi&count=2

		String cantidadResultados = "150";

		String httpABuscar = "https://api.twitter.com/1.1/statuses/user_timeline.json?screen_name=" + USUARIO + "&count=";

		if (cantidadCorrecta(cantidadResultados)) {

			httpABuscar = httpABuscar + cantidadResultados;
		} else {

			httpABuscar = httpABuscar + "1";
		}

		new GetFeedAsyncTask(){
			@Override
			protected void onPostExecute(String jsonText) {

				try {

					jsonResultado = jsonText;
					
				} catch (Exception e) {
					Log.e("GetFeedTask", "Error:" + e.getMessage());
				} finally {
						
					generarNotificacionesAMostrar();
						
					ArrayAdapter<String> adapter = new ArrayAdapter<String>(
							getApplicationContext(),
							R.layout.layout_listas, notificacionesOkString);
					
					listViewResultados.setAdapter(adapter);
				}
			}			
			
		}.execute(mAccessToken, httpABuscar);

	}

	public boolean cantidadCorrecta(String cantidadResultados) {

		boolean entre1y100 = false;

		try {
			if (cantidadResultados != "") {

				int cantidad = Integer.parseInt(cantidadResultados);

				if (cantidad >= 1 && cantidad <= 200) {

					entre1y100 = true;
				}
			}
		} catch (Exception e) {
			Log.e("cantidadCorrecta", "Error:" + e.getMessage());

		}

		return entre1y100;
	}

	public void generarNotificacionesAMostrar() {

		notificacionesOk = notificacionesParseadas();

		notificacionesOkString = new ArrayList<String>();
		
		SimpleDateFormat sdf = new SimpleDateFormat("dd/MM/yyyy HH:mm", Locale.ENGLISH);
		
		for (int i = 0; i < notificacionesOk.size(); i++) {
			
			Date fechaYHora = notificacionesOk.get(i).getFechaYHora();
			String srtFechaYHora = sdf.format(fechaYHora);
			
			notificacionesOkString.add(srtFechaYHora + ":\n " + notificacionesOk.get(i).getTexto());
		}
	}

	public ArrayList<Notificacion> notificacionesParseadas() {

		ArrayList<Notificacion> listaNotificaciones = new ArrayList<Notificacion>();

		try {
			
			if(jsonResultado != null){
				
				JSONArray arrayGeneral = new JSONArray(jsonResultado);
				
				for (int i = 0; i < arrayGeneral.length(); i++){
			        
					JSONObject objetoTweet = arrayGeneral.getJSONObject(i);
					
					if (objetoTweet.getString("text") != null) {
						
						if(esHashtagCorrecto(objetoTweet.getString("text"))){
					
							Notificacion nuevaNotificacion = new Notificacion();
					
							nuevaNotificacion.setTexto(objetoTweet.getString("text"));
							nuevaNotificacion.setFechaYHoraString(objetoTweet.getString("created_at"));
							
							Date fechaYHora = fechaYHoraParseada(objetoTweet.getString("created_at"));
							nuevaNotificacion.setFechaYHora(fechaYHora);
							
							listaNotificaciones.add(nuevaNotificacion);
						}
					}
				}	
			}
		}

		catch (Exception e) {
			Log.e("notificacionesParseadas", "Error:" + e.getMessage());
		}

		return listaNotificaciones;
	}
	
	public boolean esHashtagCorrecto(String textoTweet){
		
		boolean correcto = false;
		
		int comienzoHashtag = -1;
		int finHashtag = -1;
			
		for(int j = 0; j < textoTweet.length(); j++){
				
			if(textoTweet.charAt(j) == '#' ){
				comienzoHashtag = j + 1;
				
				int k = j;
				while(k < textoTweet.length()){
					k++;
					
					if(textoTweet.charAt(k) == ' '){
						finHashtag = k;
						break;
					}
				}
			}
		}
			
		String hashtagDelTweet = "";
			
		if(comienzoHashtag != -1 && finHashtag != -1){
				
			hashtagDelTweet = textoTweet.substring(comienzoHashtag, finHashtag);
		}
			
		if(hashtagDelTweet != ""){
				
			for(int i = 0; i < hashtagsABuscar.length; i++){
				
				if(hashtagDelTweet.equals(hashtagsABuscar[i])){
					
					correcto = true;
				}
			}
			
		}
		
		return correcto;
	}

	public Date fechaYHoraParseada(String fechaYHoraTwitter){
		
		Date fechaYHora = null;
		
        final String TWITTER_DATE_FORMAT="EEE MMM dd HH:mm:ss ZZZZZ yyyy";
        
        SimpleDateFormat sdf = new SimpleDateFormat(TWITTER_DATE_FORMAT, Locale.ENGLISH);
        sdf.setLenient(true);

        try {
		
        	fechaYHora = sdf.parse(fechaYHoraTwitter);
		} catch (java.text.ParseException e) {
				
			e.printStackTrace();
		}
        
        return fechaYHora;
	}
	
	// ---------------------------- FIN METODOS--------------------------------

	/*private void notificar() {
		NotificationCompat.Builder mBuilder = new NotificationCompat.Builder(
				this).setSmallIcon(R.drawable.ic_launcher)
				.setContentTitle("My notification")
				.setContentText("Hello World!").setAutoCancel(true);

		Intent resultIntent = new Intent(this, Notificaciones.class);

		TaskStackBuilder stackBuilder = TaskStackBuilder.create(this);

		stackBuilder.addParentStack(Notificaciones.class);

		stackBuilder.addNextIntent(resultIntent);
		PendingIntent resultPendingIntent = stackBuilder.getPendingIntent(0,
				PendingIntent.FLAG_UPDATE_CURRENT);
		mBuilder.setContentIntent(resultPendingIntent);
		NotificationManager mNotificationManager = (NotificationManager) getSystemService(Context.NOTIFICATION_SERVICE);

		mNotificationManager.notify(mId, mBuilder.build());
	}*/

	@Override
	public boolean onOptionsItemSelected(MenuItem item) {
		switch (item.getItemId()) {
		case android.R.id.home:
			NavUtils.navigateUpFromSameTask(this);
			return true;
		}
		return super.onOptionsItemSelected(item);
	}

	@Override
	public boolean onCreateOptionsMenu(Menu menu) {
		// Inflate the menu; this adds items to the action bar if it is present.
//		getMenuInflater().inflate(R.menu.notificaciones, menu);
		return true;
	}

}
