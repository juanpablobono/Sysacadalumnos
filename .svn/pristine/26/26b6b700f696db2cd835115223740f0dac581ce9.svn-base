package com.arquitecturas.sysacad.ui;

import java.util.ArrayList;
import java.util.Arrays;
import java.util.Calendar;
import java.util.Date;

import com.arquitecturas.sysacad.R;
import com.arquitecturas.sysacad.logic.Alumno;
import com.arquitecturas.sysacad.logic.Evento;
import com.arquitecturas.sysacad.logic.Nombres;
import com.arquitecturas.sysacad.sysacadservicio.GetSysacadAsyncTask;
import com.arquitecturas.sysacad.utils.LectorJSON;

import android.os.Bundle;
import android.provider.CalendarContract;
import android.provider.CalendarContract.Events;
import android.app.Activity;
import android.content.Intent;
import android.graphics.Color;
import android.graphics.drawable.ColorDrawable;
import android.support.v4.app.NavUtils;
import android.support.v7.app.ActionBarActivity;
import android.util.Log;
import android.view.Menu;
import android.view.MenuItem;
import android.view.View;
import android.view.View.OnClickListener;
import android.widget.ArrayAdapter;
import android.widget.Button;
import android.widget.CheckBox;
import android.widget.Spinner;
import android.view.View;
import android.widget.Button;

public class Calendario extends ActionBarActivity {

    private Button but_sincronizar;
    private Spinner spinner_carreras;
    private CheckBox check_finales;
    private CheckBox check_feriados;
    private CheckBox check_recesos;
    private CheckBox check_cursado;
    private CheckBox check_cursadoPrimero;
    private String[] carreras = { "Ingeniería", "Licenciatura", "Tecnicatura" };

    @Override
    protected void onCreate(Bundle savedInstanceState) {
	super.onCreate(savedInstanceState);
	setContentView(R.layout.activity_calendario);

	inicializar();

	but_sincronizar.setOnClickListener(new OnClickListener() {

	    @Override
	    public void onClick(View v) {
		if (check_finales.isChecked()) {
		    new GetSysacadAsyncTask() {
			protected void onPostExecute(String result) {
			    super.onPostExecute(result);

			    try {

			    	agregarCalendario(LectorJSON.leerCalendario(result,
					spinner_carreras.getSelectedItem()
						.toString(),
					Nombres.EXAMENES_JSON));
			    } catch (Exception e) {
				Log.e("GetCalendarioTask",
					"Error:" + e.getMessage());
			    }
			}

		    }.execute(GetSysacadAsyncTask.CALENDARIO);
		}
	    }

	    private void agregarCalendario(ArrayList<Evento> listaEventos) {
		for (Evento eventoActual : listaEventos) {
		    eventoActual.getAnio(); // devuelve un int con el
					    // atributo año del objeto
		    eventoActual.getEspecialidad(); // devuelve un string con
						    // el atributo especialidad
						    // del objeto
		    eventoActual.getTipo(); // devuelve un string con el
					    // atributo tipo del objeto
		    Date fechas [] = eventoActual.getFechas(); 
					     
		    for(int i=0;i< fechas.length; i++)
			{
			
				long ms = fechas[i].getTime();
				Calendar cal = Calendar.getInstance();    
			    Intent intent = new Intent(Intent.ACTION_EDIT);
			    intent.setType("vnd.android.cursor.item/event");
			    intent.putExtra("beginTime", ms);
			    intent.putExtra("allDay", true);
			    intent.putExtra("rrule", "FREQ=YEARLY");
			    intent.putExtra("endTime", cal.getTimeInMillis()+60*60*1000);
			    intent.putExtra("title", eventoActual.getTipo());
			    intent.putExtra("description", eventoActual.getTipo());
			    intent.putExtra("eventLocation", "Geolocation");
			    startActivity(intent);
			}
		    
		    
		}
	    }
	});

    }

    private void inicializar() {
	but_sincronizar = (Button) findViewById(R.id.but_calendario);
	spinner_carreras = (Spinner) findViewById(R.id.spinner_carreras);
	check_finales = (CheckBox) findViewById(R.id.check_finales);
	check_feriados = (CheckBox) findViewById(R.id.check_feriados);
	check_recesos = (CheckBox) findViewById(R.id.check_recesos);
	check_cursado = (CheckBox) findViewById(R.id.check_cursado);
	check_cursadoPrimero = (CheckBox) findViewById(R.id.check_cursadoPrimero);

	ArrayAdapter<String> adapter = new ArrayAdapter<String>(this,
		R.layout.layout_listas, carreras);
	spinner_carreras.setAdapter(adapter);

	getSupportActionBar().setDisplayHomeAsUpEnabled(true);
	getSupportActionBar().setBackgroundDrawable(
		new ColorDrawable(Color.parseColor(Nombres.COLOR_ACTIONBAR)));
    }

    @Override
    public boolean onOptionsItemSelected(MenuItem item) {
	switch (item.getItemId()) {
	case android.R.id.home:
	    NavUtils.navigateUpFromSameTask(this);
	    return true;
	}
	return super.onOptionsItemSelected(item);
    }

    @Override
    public boolean onCreateOptionsMenu(Menu menu) {
	// Inflate the menu; this adds items to the action bar if it is present.
	// getMenuInflater().inflate(R.menu.calendario, menu);
	return true;
    }

}
