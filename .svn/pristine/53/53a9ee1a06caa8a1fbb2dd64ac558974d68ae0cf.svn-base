package com.arquitecturas.sysacad.ui;

import java.util.ArrayList;
import java.util.Calendar;

import com.arquitecturas.sysacad.R;
import com.arquitecturas.sysacad.logic.Alumno;
import com.arquitecturas.sysacad.logic.Evento;
import com.arquitecturas.sysacad.logic.Nombres;
import com.arquitecturas.sysacad.utils.LectorJSON;

import android.os.Bundle;
import android.provider.CalendarContract;
import android.provider.CalendarContract.Events;
import android.app.Activity;
import android.content.Intent;
import android.support.v4.app.NavUtils;
import android.support.v7.app.ActionBarActivity;
import android.view.Menu;
import android.view.MenuItem;
import android.view.View;
import android.view.View.OnClickListener;
import android.widget.ArrayAdapter;
import android.widget.Button;
import android.widget.CheckBox;
import android.widget.Spinner;
import android.view.View;
import android.widget.Button;

public class Calendario extends ActionBarActivity {

	private Button but_sincronizar;
	private Spinner spinner_carreras;
	private CheckBox check_finales;
	private CheckBox check_feriados;
	private CheckBox check_recesos;
	private CheckBox check_cursado;
	private CheckBox check_cursadoPrimero;
	private String[] carreras = {"Ingeniería", "Licenciatura", "Tecnicatura"};
	
	@Override
	protected void onCreate(Bundle savedInstanceState) {
		super.onCreate(savedInstanceState);
		setContentView(R.layout.activity_calendario);
		getSupportActionBar().setDisplayHomeAsUpEnabled(true);
		
		inicializar();
		
		but_sincronizar.setOnClickListener(new OnClickListener() {
			
			@Override
			public void onClick(View v) {
				if(check_finales.isChecked()) {
					agregarCalendario(LectorJSON.LeerJSON(null, spinner_carreras.getSelectedItem().toString(), Nombres.EXAMENES));
				}
			}

			private void agregarCalendario(ArrayList<Evento> listaEventos) {
				for (Evento eventoActual : listaEventos) {
					eventoActual.getAnio(); //te devuelve un int con el atributo año del objeto
					eventoActual.getEspecialidad(); //te devuelve un string con el atributo especialidad del objeto
					eventoActual.getTipo(); //te devuelve un string con el atributo tipo del objeto
					eventoActual.getFechas(); /*te devuelve un arreglo con las fechas del objeto
					 							si el evento no es de principio y fin como el comienzo
					 							y fin del cuatrimestre, tiene una sola fecha.
					 							Sino tiene dos fechas, donde la primera es la fecha de inicio y 
					 							la segunda la de finalización. Posiblemente tengas que buscar
					 							cómo hacer para agregar dos eventos diferentes al calendario, uno para 
					 							el comienzo del cuatrimestre y otro para el final*/
				}
			}
		});
		
	}

	private void inicializar() {
		but_sincronizar = (Button) findViewById(R.id.but_calendario);
		spinner_carreras = (Spinner) findViewById(R.id.spinner_carreras);
		check_finales = (CheckBox) findViewById(R.id.check_finales);
		check_feriados = (CheckBox) findViewById(R.id.check_feriados);
		check_recesos = (CheckBox) findViewById(R.id.check_recesos);
		check_cursado = (CheckBox) findViewById(R.id.check_cursado);
		check_cursadoPrimero = (CheckBox) findViewById(R.id.check_cursadoPrimero);
		
		ArrayAdapter<String> adapter = new ArrayAdapter<String>(this, R.layout.layout_listas, carreras);
		spinner_carreras.setAdapter(adapter);		
	}

	@Override
	public boolean onOptionsItemSelected(MenuItem item) {
	    switch (item.getItemId()) {
	    	case android.R.id.home:
	    		NavUtils.navigateUpFromSameTask(this);
	    		return true;
	    }
	    return super.onOptionsItemSelected(item);
	}

	public void SincronizarEventos (View view)
	{
		
		Calendar cal = Calendar.getInstance(); 
		//Codigo hardcodeado. Setear los valores que vengan del sysacad
		cal.set(Calendar.DAY_OF_MONTH, 06);
		cal.set(Calendar.MONTH, 5);
		cal.set(Calendar.YEAR, 2014);
		cal.set(Calendar.HOUR_OF_DAY, 18);
		cal.set(Calendar.MINUTE, 00);
		  
		Intent intent = new Intent(Intent.ACTION_EDIT);
		intent.setType("vnd.android.cursor.item/event");
		intent.putExtra(CalendarContract.EXTRA_EVENT_BEGIN_TIME, cal.getTimeInMillis());
		intent.putExtra(CalendarContract.EXTRA_EVENT_END_TIME, cal.getTimeInMillis()+60*60*1000);
		intent.putExtra(Events.ALL_DAY, false);
		intent.putExtra(Events.RRULE, "FREQ=YEARLY");
		intent.putExtra(Events.TITLE,"Mesa de examen");
		intent.putExtra(Events.DESCRIPTION, "Descripcion del evento");
		startActivity(intent);
		

	}
	
	@Override
	public boolean onCreateOptionsMenu(Menu menu) {
		// Inflate the menu; this adds items to the action bar if it is present.
//		getMenuInflater().inflate(R.menu.calendario, menu);
		return true;
	}

}
